# docker-compose.yaml
services:
  db:
    image: postgres:15-alpine
    container_name: secland_bank_db # Standardized container name
    environment:
      # We define the database name and user.
      POSTGRES_DB: secland_bank_db
      POSTGRES_USER: postgres
      # This tells PostgreSQL to trust connections from within the same Docker network.
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d secland_bank_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - secland_network # Connect to our single custom network

  app:
    build: .
    container_name: secland_bank_app
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      # The application now correctly points to the 'secland_bank_db' database.
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/secland_bank_db
      SPRING_DATASOURCE_USERNAME: postgres
      # The password can be left empty as it's not used by the DB.
      SPRING_DATASOURCE_PASSWORD:
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: always
      SPRING_JPA_DEFER_DATASOURCE_INITIALIZATION: true
    restart: on-failure
    networks:
      - secland_network # Connect to our single custom network

volumes:
  postgres-data:

# Here we define our single, consistent network for the entire project.
networks:
  secland_network:
    driver: bridge
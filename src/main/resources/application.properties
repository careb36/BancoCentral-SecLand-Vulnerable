# ===================================================================
# GENERAL APPLICATION CONFIGURATION
# ===================================================================
# The application name (appears in logs, metrics, actuator, etc.)
spring.application.name=BancoCentral-SecLand

# ===================================================================
# DATABASE CONNECTION (DATASOURCE) CONFIGURATION
# ===================================================================
# JDBC URL for connecting to the PostgreSQL database:
#   - host: The server where PostgreSQL is running (use "localhost" for local/Docker)
#   - port: Default PostgreSQL port is 5432
#   - database: The target database/schema (example: bancocentral)
spring.datasource.url=jdbc:postgresql://localhost:5432/bancocentral

# Database user credentials (should match those in your Docker Compose file or DB setup)
spring.datasource.username=postgres
spring.datasource.password=root

# ===================================================================
# HIBERNATE (JPA) CONFIGURATION
# ===================================================================
# Controls how Hibernate/JPA handles schema generation on startup.
#  - update: Updates the DB schema automatically for development.
#  - validate: Only validates the schema, does not change it.
#  - create / create-drop: For dev/testing only, creates (and drops) schema each run.
#  - Use Flyway or Liquibase for schema management in production!
spring.jpa.hibernate.ddl-auto=update

# ===================================================================
# FLYWAY MIGRATION CONFIGURATION
# ===================================================================
# Enable Flyway for automated database schema migrations on startup.
spring.flyway.enabled=true
# Path to SQL migration scripts (default: classpath:db/migration)
spring.flyway.locations=classpath:db/migration
# If targeting a pre-existing schema, start versioning at 1
spring.flyway.baseline-on-migrate=true

# ===================================================================
# DEVELOPMENT & DEBUG LOGGING
# ===================================================================
# Enable DEBUG logs for Spring Security (authentication, web filters)
logging.level.org.springframework.security=DEBUG
# Enable DEBUG logs for web requests and controllers
logging.level.org.springframework.web=DEBUG
